// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: blip/blip.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Blipper.Proto.BlipService {
  public static partial class BlipService
  {
    static readonly string __ServiceName = "blipper.blip.v1.BlipService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.CreateBlipRequest> __Marshaller_blipper_blip_v1_CreateBlipRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.CreateBlipRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.CreateBlipResponse> __Marshaller_blipper_blip_v1_CreateBlipResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.CreateBlipResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetBlipRequest> __Marshaller_blipper_blip_v1_GetBlipRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetBlipRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetBlipResponse> __Marshaller_blipper_blip_v1_GetBlipResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetBlipResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.ListBlipsRequest> __Marshaller_blipper_blip_v1_ListBlipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.ListBlipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.ListBlipsResponse> __Marshaller_blipper_blip_v1_ListBlipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.ListBlipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.DeleteBlipRequest> __Marshaller_blipper_blip_v1_DeleteBlipRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.DeleteBlipRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.DeleteBlipResponse> __Marshaller_blipper_blip_v1_DeleteBlipResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.DeleteBlipResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.UpdateBlipRequest> __Marshaller_blipper_blip_v1_UpdateBlipRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.UpdateBlipRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.UpdateBlipResponse> __Marshaller_blipper_blip_v1_UpdateBlipResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.UpdateBlipResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.CreateCommentRequest> __Marshaller_blipper_blip_v1_CreateCommentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.CreateCommentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.CreateCommentResponse> __Marshaller_blipper_blip_v1_CreateCommentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.CreateCommentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetCommentsRequest> __Marshaller_blipper_blip_v1_GetCommentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetCommentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetCommentsResponse> __Marshaller_blipper_blip_v1_GetCommentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetCommentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.UpdateCommentRequest> __Marshaller_blipper_blip_v1_UpdateCommentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.UpdateCommentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.UpdateCommentResponse> __Marshaller_blipper_blip_v1_UpdateCommentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.UpdateCommentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.DeleteCommentRequest> __Marshaller_blipper_blip_v1_DeleteCommentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.DeleteCommentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.VoteRequest> __Marshaller_blipper_blip_v1_VoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.VoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.VoteResponse> __Marshaller_blipper_blip_v1_VoteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.VoteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetVoteStatusRequest> __Marshaller_blipper_blip_v1_GetVoteStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetVoteStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetVoteStatusResponse> __Marshaller_blipper_blip_v1_GetVoteStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetVoteStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetCircleTimelineRequest> __Marshaller_blipper_blip_v1_GetCircleTimelineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetCircleTimelineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetCircleTimelineResponse> __Marshaller_blipper_blip_v1_GetCircleTimelineResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetCircleTimelineResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetUserTimelineRequest> __Marshaller_blipper_blip_v1_GetUserTimelineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetUserTimelineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetUserTimelineResponse> __Marshaller_blipper_blip_v1_GetUserTimelineResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetUserTimelineResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetTrendingFeedRequest> __Marshaller_blipper_blip_v1_GetTrendingFeedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetTrendingFeedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetTrendingFeedResponse> __Marshaller_blipper_blip_v1_GetTrendingFeedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetTrendingFeedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetPopularFeedRequest> __Marshaller_blipper_blip_v1_GetPopularFeedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetPopularFeedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.BlipService.GetPopularFeedResponse> __Marshaller_blipper_blip_v1_GetPopularFeedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.BlipService.GetPopularFeedResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.CreateBlipRequest, global::Blipper.Proto.BlipService.CreateBlipResponse> __Method_CreateBlip = new grpc::Method<global::Blipper.Proto.BlipService.CreateBlipRequest, global::Blipper.Proto.BlipService.CreateBlipResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBlip",
        __Marshaller_blipper_blip_v1_CreateBlipRequest,
        __Marshaller_blipper_blip_v1_CreateBlipResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetBlipRequest, global::Blipper.Proto.BlipService.GetBlipResponse> __Method_GetBlip = new grpc::Method<global::Blipper.Proto.BlipService.GetBlipRequest, global::Blipper.Proto.BlipService.GetBlipResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlip",
        __Marshaller_blipper_blip_v1_GetBlipRequest,
        __Marshaller_blipper_blip_v1_GetBlipResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.ListBlipsRequest, global::Blipper.Proto.BlipService.ListBlipsResponse> __Method_ListBlips = new grpc::Method<global::Blipper.Proto.BlipService.ListBlipsRequest, global::Blipper.Proto.BlipService.ListBlipsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBlips",
        __Marshaller_blipper_blip_v1_ListBlipsRequest,
        __Marshaller_blipper_blip_v1_ListBlipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.DeleteBlipRequest, global::Blipper.Proto.BlipService.DeleteBlipResponse> __Method_DeleteBlip = new grpc::Method<global::Blipper.Proto.BlipService.DeleteBlipRequest, global::Blipper.Proto.BlipService.DeleteBlipResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBlip",
        __Marshaller_blipper_blip_v1_DeleteBlipRequest,
        __Marshaller_blipper_blip_v1_DeleteBlipResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.UpdateBlipRequest, global::Blipper.Proto.BlipService.UpdateBlipResponse> __Method_UpdateBlip = new grpc::Method<global::Blipper.Proto.BlipService.UpdateBlipRequest, global::Blipper.Proto.BlipService.UpdateBlipResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBlip",
        __Marshaller_blipper_blip_v1_UpdateBlipRequest,
        __Marshaller_blipper_blip_v1_UpdateBlipResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.CreateCommentRequest, global::Blipper.Proto.BlipService.CreateCommentResponse> __Method_CreateComment = new grpc::Method<global::Blipper.Proto.BlipService.CreateCommentRequest, global::Blipper.Proto.BlipService.CreateCommentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateComment",
        __Marshaller_blipper_blip_v1_CreateCommentRequest,
        __Marshaller_blipper_blip_v1_CreateCommentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetCommentsRequest, global::Blipper.Proto.BlipService.GetCommentsResponse> __Method_GetComments = new grpc::Method<global::Blipper.Proto.BlipService.GetCommentsRequest, global::Blipper.Proto.BlipService.GetCommentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetComments",
        __Marshaller_blipper_blip_v1_GetCommentsRequest,
        __Marshaller_blipper_blip_v1_GetCommentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.UpdateCommentRequest, global::Blipper.Proto.BlipService.UpdateCommentResponse> __Method_UpdateComment = new grpc::Method<global::Blipper.Proto.BlipService.UpdateCommentRequest, global::Blipper.Proto.BlipService.UpdateCommentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_blipper_blip_v1_UpdateCommentRequest,
        __Marshaller_blipper_blip_v1_UpdateCommentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.DeleteCommentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteComment = new grpc::Method<global::Blipper.Proto.BlipService.DeleteCommentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteComment",
        __Marshaller_blipper_blip_v1_DeleteCommentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.VoteRequest, global::Blipper.Proto.BlipService.VoteResponse> __Method_Vote = new grpc::Method<global::Blipper.Proto.BlipService.VoteRequest, global::Blipper.Proto.BlipService.VoteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Vote",
        __Marshaller_blipper_blip_v1_VoteRequest,
        __Marshaller_blipper_blip_v1_VoteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetVoteStatusRequest, global::Blipper.Proto.BlipService.GetVoteStatusResponse> __Method_GetVoteStatus = new grpc::Method<global::Blipper.Proto.BlipService.GetVoteStatusRequest, global::Blipper.Proto.BlipService.GetVoteStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVoteStatus",
        __Marshaller_blipper_blip_v1_GetVoteStatusRequest,
        __Marshaller_blipper_blip_v1_GetVoteStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetCircleTimelineRequest, global::Blipper.Proto.BlipService.GetCircleTimelineResponse> __Method_GetCircleTimeline = new grpc::Method<global::Blipper.Proto.BlipService.GetCircleTimelineRequest, global::Blipper.Proto.BlipService.GetCircleTimelineResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCircleTimeline",
        __Marshaller_blipper_blip_v1_GetCircleTimelineRequest,
        __Marshaller_blipper_blip_v1_GetCircleTimelineResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetUserTimelineRequest, global::Blipper.Proto.BlipService.GetUserTimelineResponse> __Method_GetUserTimeline = new grpc::Method<global::Blipper.Proto.BlipService.GetUserTimelineRequest, global::Blipper.Proto.BlipService.GetUserTimelineResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserTimeline",
        __Marshaller_blipper_blip_v1_GetUserTimelineRequest,
        __Marshaller_blipper_blip_v1_GetUserTimelineResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetTrendingFeedRequest, global::Blipper.Proto.BlipService.GetTrendingFeedResponse> __Method_GetTrendingFeed = new grpc::Method<global::Blipper.Proto.BlipService.GetTrendingFeedRequest, global::Blipper.Proto.BlipService.GetTrendingFeedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTrendingFeed",
        __Marshaller_blipper_blip_v1_GetTrendingFeedRequest,
        __Marshaller_blipper_blip_v1_GetTrendingFeedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.BlipService.GetPopularFeedRequest, global::Blipper.Proto.BlipService.GetPopularFeedResponse> __Method_GetPopularFeed = new grpc::Method<global::Blipper.Proto.BlipService.GetPopularFeedRequest, global::Blipper.Proto.BlipService.GetPopularFeedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPopularFeed",
        __Marshaller_blipper_blip_v1_GetPopularFeedRequest,
        __Marshaller_blipper_blip_v1_GetPopularFeedResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Blipper.Proto.BlipService.BlipReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BlipService</summary>
    [grpc::BindServiceMethod(typeof(BlipService), "BindService")]
    public abstract partial class BlipServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.CreateBlipResponse> CreateBlip(global::Blipper.Proto.BlipService.CreateBlipRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetBlipResponse> GetBlip(global::Blipper.Proto.BlipService.GetBlipRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.ListBlipsResponse> ListBlips(global::Blipper.Proto.BlipService.ListBlipsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.DeleteBlipResponse> DeleteBlip(global::Blipper.Proto.BlipService.DeleteBlipRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.UpdateBlipResponse> UpdateBlip(global::Blipper.Proto.BlipService.UpdateBlipRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Comment operations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.CreateCommentResponse> CreateComment(global::Blipper.Proto.BlipService.CreateCommentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetCommentsResponse> GetComments(global::Blipper.Proto.BlipService.GetCommentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.UpdateCommentResponse> UpdateComment(global::Blipper.Proto.BlipService.UpdateCommentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteComment(global::Blipper.Proto.BlipService.DeleteCommentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Vote operations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.VoteResponse> Vote(global::Blipper.Proto.BlipService.VoteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetVoteStatusResponse> GetVoteStatus(global::Blipper.Proto.BlipService.GetVoteStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Timeline operations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetCircleTimelineResponse> GetCircleTimeline(global::Blipper.Proto.BlipService.GetCircleTimelineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetUserTimelineResponse> GetUserTimeline(global::Blipper.Proto.BlipService.GetUserTimelineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Feed operations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetTrendingFeedResponse> GetTrendingFeed(global::Blipper.Proto.BlipService.GetTrendingFeedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.BlipService.GetPopularFeedResponse> GetPopularFeed(global::Blipper.Proto.BlipService.GetPopularFeedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BlipService</summary>
    public partial class BlipServiceClient : grpc::ClientBase<BlipServiceClient>
    {
      /// <summary>Creates a new client for BlipService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BlipServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BlipService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BlipServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BlipServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BlipServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.CreateBlipResponse CreateBlip(global::Blipper.Proto.BlipService.CreateBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBlip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.CreateBlipResponse CreateBlip(global::Blipper.Proto.BlipService.CreateBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.CreateBlipResponse> CreateBlipAsync(global::Blipper.Proto.BlipService.CreateBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBlipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.CreateBlipResponse> CreateBlipAsync(global::Blipper.Proto.BlipService.CreateBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetBlipResponse GetBlip(global::Blipper.Proto.BlipService.GetBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetBlipResponse GetBlip(global::Blipper.Proto.BlipService.GetBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetBlipResponse> GetBlipAsync(global::Blipper.Proto.BlipService.GetBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetBlipResponse> GetBlipAsync(global::Blipper.Proto.BlipService.GetBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.ListBlipsResponse ListBlips(global::Blipper.Proto.BlipService.ListBlipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBlips(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.ListBlipsResponse ListBlips(global::Blipper.Proto.BlipService.ListBlipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBlips, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.ListBlipsResponse> ListBlipsAsync(global::Blipper.Proto.BlipService.ListBlipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBlipsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.ListBlipsResponse> ListBlipsAsync(global::Blipper.Proto.BlipService.ListBlipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBlips, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.DeleteBlipResponse DeleteBlip(global::Blipper.Proto.BlipService.DeleteBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBlip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.DeleteBlipResponse DeleteBlip(global::Blipper.Proto.BlipService.DeleteBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.DeleteBlipResponse> DeleteBlipAsync(global::Blipper.Proto.BlipService.DeleteBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBlipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.DeleteBlipResponse> DeleteBlipAsync(global::Blipper.Proto.BlipService.DeleteBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.UpdateBlipResponse UpdateBlip(global::Blipper.Proto.BlipService.UpdateBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBlip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.UpdateBlipResponse UpdateBlip(global::Blipper.Proto.BlipService.UpdateBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBlip, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.UpdateBlipResponse> UpdateBlipAsync(global::Blipper.Proto.BlipService.UpdateBlipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBlipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.UpdateBlipResponse> UpdateBlipAsync(global::Blipper.Proto.BlipService.UpdateBlipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBlip, null, options, request);
      }
      /// <summary>
      /// Comment operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.CreateCommentResponse CreateComment(global::Blipper.Proto.BlipService.CreateCommentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Comment operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.CreateCommentResponse CreateComment(global::Blipper.Proto.BlipService.CreateCommentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateComment, null, options, request);
      }
      /// <summary>
      /// Comment operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.CreateCommentResponse> CreateCommentAsync(global::Blipper.Proto.BlipService.CreateCommentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Comment operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.CreateCommentResponse> CreateCommentAsync(global::Blipper.Proto.BlipService.CreateCommentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetCommentsResponse GetComments(global::Blipper.Proto.BlipService.GetCommentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetComments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetCommentsResponse GetComments(global::Blipper.Proto.BlipService.GetCommentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetCommentsResponse> GetCommentsAsync(global::Blipper.Proto.BlipService.GetCommentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetCommentsResponse> GetCommentsAsync(global::Blipper.Proto.BlipService.GetCommentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.UpdateCommentResponse UpdateComment(global::Blipper.Proto.BlipService.UpdateCommentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.UpdateCommentResponse UpdateComment(global::Blipper.Proto.BlipService.UpdateCommentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.UpdateCommentResponse> UpdateCommentAsync(global::Blipper.Proto.BlipService.UpdateCommentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.UpdateCommentResponse> UpdateCommentAsync(global::Blipper.Proto.BlipService.UpdateCommentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteComment(global::Blipper.Proto.BlipService.DeleteCommentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteComment(global::Blipper.Proto.BlipService.DeleteCommentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCommentAsync(global::Blipper.Proto.BlipService.DeleteCommentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCommentAsync(global::Blipper.Proto.BlipService.DeleteCommentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteComment, null, options, request);
      }
      /// <summary>
      /// Vote operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.VoteResponse Vote(global::Blipper.Proto.BlipService.VoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Vote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Vote operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.VoteResponse Vote(global::Blipper.Proto.BlipService.VoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Vote, null, options, request);
      }
      /// <summary>
      /// Vote operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.VoteResponse> VoteAsync(global::Blipper.Proto.BlipService.VoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Vote operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.VoteResponse> VoteAsync(global::Blipper.Proto.BlipService.VoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Vote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetVoteStatusResponse GetVoteStatus(global::Blipper.Proto.BlipService.GetVoteStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoteStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetVoteStatusResponse GetVoteStatus(global::Blipper.Proto.BlipService.GetVoteStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVoteStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetVoteStatusResponse> GetVoteStatusAsync(global::Blipper.Proto.BlipService.GetVoteStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVoteStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetVoteStatusResponse> GetVoteStatusAsync(global::Blipper.Proto.BlipService.GetVoteStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVoteStatus, null, options, request);
      }
      /// <summary>
      /// Timeline operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetCircleTimelineResponse GetCircleTimeline(global::Blipper.Proto.BlipService.GetCircleTimelineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCircleTimeline(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Timeline operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetCircleTimelineResponse GetCircleTimeline(global::Blipper.Proto.BlipService.GetCircleTimelineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCircleTimeline, null, options, request);
      }
      /// <summary>
      /// Timeline operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetCircleTimelineResponse> GetCircleTimelineAsync(global::Blipper.Proto.BlipService.GetCircleTimelineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCircleTimelineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Timeline operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetCircleTimelineResponse> GetCircleTimelineAsync(global::Blipper.Proto.BlipService.GetCircleTimelineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCircleTimeline, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetUserTimelineResponse GetUserTimeline(global::Blipper.Proto.BlipService.GetUserTimelineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserTimeline(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetUserTimelineResponse GetUserTimeline(global::Blipper.Proto.BlipService.GetUserTimelineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserTimeline, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetUserTimelineResponse> GetUserTimelineAsync(global::Blipper.Proto.BlipService.GetUserTimelineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserTimelineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetUserTimelineResponse> GetUserTimelineAsync(global::Blipper.Proto.BlipService.GetUserTimelineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserTimeline, null, options, request);
      }
      /// <summary>
      /// Feed operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetTrendingFeedResponse GetTrendingFeed(global::Blipper.Proto.BlipService.GetTrendingFeedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTrendingFeed(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Feed operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetTrendingFeedResponse GetTrendingFeed(global::Blipper.Proto.BlipService.GetTrendingFeedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTrendingFeed, null, options, request);
      }
      /// <summary>
      /// Feed operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetTrendingFeedResponse> GetTrendingFeedAsync(global::Blipper.Proto.BlipService.GetTrendingFeedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTrendingFeedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Feed operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetTrendingFeedResponse> GetTrendingFeedAsync(global::Blipper.Proto.BlipService.GetTrendingFeedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTrendingFeed, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetPopularFeedResponse GetPopularFeed(global::Blipper.Proto.BlipService.GetPopularFeedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPopularFeed(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.BlipService.GetPopularFeedResponse GetPopularFeed(global::Blipper.Proto.BlipService.GetPopularFeedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPopularFeed, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetPopularFeedResponse> GetPopularFeedAsync(global::Blipper.Proto.BlipService.GetPopularFeedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPopularFeedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.BlipService.GetPopularFeedResponse> GetPopularFeedAsync(global::Blipper.Proto.BlipService.GetPopularFeedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPopularFeed, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BlipServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BlipServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BlipServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateBlip, serviceImpl.CreateBlip)
          .AddMethod(__Method_GetBlip, serviceImpl.GetBlip)
          .AddMethod(__Method_ListBlips, serviceImpl.ListBlips)
          .AddMethod(__Method_DeleteBlip, serviceImpl.DeleteBlip)
          .AddMethod(__Method_UpdateBlip, serviceImpl.UpdateBlip)
          .AddMethod(__Method_CreateComment, serviceImpl.CreateComment)
          .AddMethod(__Method_GetComments, serviceImpl.GetComments)
          .AddMethod(__Method_UpdateComment, serviceImpl.UpdateComment)
          .AddMethod(__Method_DeleteComment, serviceImpl.DeleteComment)
          .AddMethod(__Method_Vote, serviceImpl.Vote)
          .AddMethod(__Method_GetVoteStatus, serviceImpl.GetVoteStatus)
          .AddMethod(__Method_GetCircleTimeline, serviceImpl.GetCircleTimeline)
          .AddMethod(__Method_GetUserTimeline, serviceImpl.GetUserTimeline)
          .AddMethod(__Method_GetTrendingFeed, serviceImpl.GetTrendingFeed)
          .AddMethod(__Method_GetPopularFeed, serviceImpl.GetPopularFeed).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BlipServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateBlip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.CreateBlipRequest, global::Blipper.Proto.BlipService.CreateBlipResponse>(serviceImpl.CreateBlip));
      serviceBinder.AddMethod(__Method_GetBlip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetBlipRequest, global::Blipper.Proto.BlipService.GetBlipResponse>(serviceImpl.GetBlip));
      serviceBinder.AddMethod(__Method_ListBlips, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.ListBlipsRequest, global::Blipper.Proto.BlipService.ListBlipsResponse>(serviceImpl.ListBlips));
      serviceBinder.AddMethod(__Method_DeleteBlip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.DeleteBlipRequest, global::Blipper.Proto.BlipService.DeleteBlipResponse>(serviceImpl.DeleteBlip));
      serviceBinder.AddMethod(__Method_UpdateBlip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.UpdateBlipRequest, global::Blipper.Proto.BlipService.UpdateBlipResponse>(serviceImpl.UpdateBlip));
      serviceBinder.AddMethod(__Method_CreateComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.CreateCommentRequest, global::Blipper.Proto.BlipService.CreateCommentResponse>(serviceImpl.CreateComment));
      serviceBinder.AddMethod(__Method_GetComments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetCommentsRequest, global::Blipper.Proto.BlipService.GetCommentsResponse>(serviceImpl.GetComments));
      serviceBinder.AddMethod(__Method_UpdateComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.UpdateCommentRequest, global::Blipper.Proto.BlipService.UpdateCommentResponse>(serviceImpl.UpdateComment));
      serviceBinder.AddMethod(__Method_DeleteComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.DeleteCommentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteComment));
      serviceBinder.AddMethod(__Method_Vote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.VoteRequest, global::Blipper.Proto.BlipService.VoteResponse>(serviceImpl.Vote));
      serviceBinder.AddMethod(__Method_GetVoteStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetVoteStatusRequest, global::Blipper.Proto.BlipService.GetVoteStatusResponse>(serviceImpl.GetVoteStatus));
      serviceBinder.AddMethod(__Method_GetCircleTimeline, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetCircleTimelineRequest, global::Blipper.Proto.BlipService.GetCircleTimelineResponse>(serviceImpl.GetCircleTimeline));
      serviceBinder.AddMethod(__Method_GetUserTimeline, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetUserTimelineRequest, global::Blipper.Proto.BlipService.GetUserTimelineResponse>(serviceImpl.GetUserTimeline));
      serviceBinder.AddMethod(__Method_GetTrendingFeed, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetTrendingFeedRequest, global::Blipper.Proto.BlipService.GetTrendingFeedResponse>(serviceImpl.GetTrendingFeed));
      serviceBinder.AddMethod(__Method_GetPopularFeed, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.BlipService.GetPopularFeedRequest, global::Blipper.Proto.BlipService.GetPopularFeedResponse>(serviceImpl.GetPopularFeed));
    }

  }
}
#endregion
