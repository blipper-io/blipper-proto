// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: circle/circle.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Blipper.Proto.CircleService {
  public static partial class CircleProtoService
  {
    static readonly string __ServiceName = "blipper.circle.v1.CircleProtoService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.CreateCircleRequest> __Marshaller_blipper_circle_v1_CreateCircleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.CreateCircleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.Shared.Circle> __Marshaller_blipper_shared_v1_Circle = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.Shared.Circle.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.GetCircleRequest> __Marshaller_blipper_circle_v1_GetCircleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.GetCircleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.ListCirclesRequest> __Marshaller_blipper_circle_v1_ListCirclesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.ListCirclesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.ListCirclesResponse> __Marshaller_blipper_circle_v1_ListCirclesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.ListCirclesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.UpdateCircleRequest> __Marshaller_blipper_circle_v1_UpdateCircleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.UpdateCircleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.DeleteCircleRequest> __Marshaller_blipper_circle_v1_DeleteCircleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.DeleteCircleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.JoinCircleRequest> __Marshaller_blipper_circle_v1_JoinCircleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.JoinCircleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.Shared.MembershipInfo> __Marshaller_blipper_shared_v1_MembershipInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.Shared.MembershipInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.LeaveCircleRequest> __Marshaller_blipper_circle_v1_LeaveCircleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.LeaveCircleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.GetUserCirclesRequest> __Marshaller_blipper_circle_v1_GetUserCirclesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.GetUserCirclesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.GetUserCirclesResponse> __Marshaller_blipper_circle_v1_GetUserCirclesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.GetUserCirclesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.GetCircleMembersRequest> __Marshaller_blipper_circle_v1_GetCircleMembersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.GetCircleMembersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.GetCircleMembersResponse> __Marshaller_blipper_circle_v1_GetCircleMembersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.GetCircleMembersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.UpdateMemberRoleRequest> __Marshaller_blipper_circle_v1_UpdateMemberRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.UpdateMemberRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.GetMembershipRequest> __Marshaller_blipper_circle_v1_GetMembershipRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.GetMembershipRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.ListJoinRequestsRequest> __Marshaller_blipper_circle_v1_ListJoinRequestsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.ListJoinRequestsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.ListJoinRequestsResponse> __Marshaller_blipper_circle_v1_ListJoinRequestsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.ListJoinRequestsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.ApproveJoinRequestRequest> __Marshaller_blipper_circle_v1_ApproveJoinRequestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.ApproveJoinRequestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Blipper.Proto.CircleService.RejectJoinRequestRequest> __Marshaller_blipper_circle_v1_RejectJoinRequestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Blipper.Proto.CircleService.RejectJoinRequestRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.CreateCircleRequest, global::Blipper.Proto.Shared.Circle> __Method_CreateCircle = new grpc::Method<global::Blipper.Proto.CircleService.CreateCircleRequest, global::Blipper.Proto.Shared.Circle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCircle",
        __Marshaller_blipper_circle_v1_CreateCircleRequest,
        __Marshaller_blipper_shared_v1_Circle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.GetCircleRequest, global::Blipper.Proto.Shared.Circle> __Method_GetCircle = new grpc::Method<global::Blipper.Proto.CircleService.GetCircleRequest, global::Blipper.Proto.Shared.Circle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCircle",
        __Marshaller_blipper_circle_v1_GetCircleRequest,
        __Marshaller_blipper_shared_v1_Circle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.ListCirclesRequest, global::Blipper.Proto.CircleService.ListCirclesResponse> __Method_ListCircles = new grpc::Method<global::Blipper.Proto.CircleService.ListCirclesRequest, global::Blipper.Proto.CircleService.ListCirclesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCircles",
        __Marshaller_blipper_circle_v1_ListCirclesRequest,
        __Marshaller_blipper_circle_v1_ListCirclesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.UpdateCircleRequest, global::Blipper.Proto.Shared.Circle> __Method_UpdateCircle = new grpc::Method<global::Blipper.Proto.CircleService.UpdateCircleRequest, global::Blipper.Proto.Shared.Circle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCircle",
        __Marshaller_blipper_circle_v1_UpdateCircleRequest,
        __Marshaller_blipper_shared_v1_Circle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.DeleteCircleRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCircle = new grpc::Method<global::Blipper.Proto.CircleService.DeleteCircleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCircle",
        __Marshaller_blipper_circle_v1_DeleteCircleRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.JoinCircleRequest, global::Blipper.Proto.Shared.MembershipInfo> __Method_JoinCircle = new grpc::Method<global::Blipper.Proto.CircleService.JoinCircleRequest, global::Blipper.Proto.Shared.MembershipInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JoinCircle",
        __Marshaller_blipper_circle_v1_JoinCircleRequest,
        __Marshaller_blipper_shared_v1_MembershipInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.LeaveCircleRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_LeaveCircle = new grpc::Method<global::Blipper.Proto.CircleService.LeaveCircleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LeaveCircle",
        __Marshaller_blipper_circle_v1_LeaveCircleRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.GetUserCirclesRequest, global::Blipper.Proto.CircleService.GetUserCirclesResponse> __Method_GetUserCircles = new grpc::Method<global::Blipper.Proto.CircleService.GetUserCirclesRequest, global::Blipper.Proto.CircleService.GetUserCirclesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserCircles",
        __Marshaller_blipper_circle_v1_GetUserCirclesRequest,
        __Marshaller_blipper_circle_v1_GetUserCirclesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.GetCircleMembersRequest, global::Blipper.Proto.CircleService.GetCircleMembersResponse> __Method_GetCircleMembers = new grpc::Method<global::Blipper.Proto.CircleService.GetCircleMembersRequest, global::Blipper.Proto.CircleService.GetCircleMembersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCircleMembers",
        __Marshaller_blipper_circle_v1_GetCircleMembersRequest,
        __Marshaller_blipper_circle_v1_GetCircleMembersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.UpdateMemberRoleRequest, global::Blipper.Proto.Shared.MembershipInfo> __Method_UpdateMemberRole = new grpc::Method<global::Blipper.Proto.CircleService.UpdateMemberRoleRequest, global::Blipper.Proto.Shared.MembershipInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMemberRole",
        __Marshaller_blipper_circle_v1_UpdateMemberRoleRequest,
        __Marshaller_blipper_shared_v1_MembershipInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.GetMembershipRequest, global::Blipper.Proto.Shared.MembershipInfo> __Method_GetMembership = new grpc::Method<global::Blipper.Proto.CircleService.GetMembershipRequest, global::Blipper.Proto.Shared.MembershipInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMembership",
        __Marshaller_blipper_circle_v1_GetMembershipRequest,
        __Marshaller_blipper_shared_v1_MembershipInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.ListJoinRequestsRequest, global::Blipper.Proto.CircleService.ListJoinRequestsResponse> __Method_ListJoinRequests = new grpc::Method<global::Blipper.Proto.CircleService.ListJoinRequestsRequest, global::Blipper.Proto.CircleService.ListJoinRequestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListJoinRequests",
        __Marshaller_blipper_circle_v1_ListJoinRequestsRequest,
        __Marshaller_blipper_circle_v1_ListJoinRequestsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.ApproveJoinRequestRequest, global::Blipper.Proto.Shared.MembershipInfo> __Method_ApproveJoinRequest = new grpc::Method<global::Blipper.Proto.CircleService.ApproveJoinRequestRequest, global::Blipper.Proto.Shared.MembershipInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApproveJoinRequest",
        __Marshaller_blipper_circle_v1_ApproveJoinRequestRequest,
        __Marshaller_blipper_shared_v1_MembershipInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Blipper.Proto.CircleService.RejectJoinRequestRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RejectJoinRequest = new grpc::Method<global::Blipper.Proto.CircleService.RejectJoinRequestRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RejectJoinRequest",
        __Marshaller_blipper_circle_v1_RejectJoinRequestRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Blipper.Proto.CircleService.CircleReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CircleProtoService</summary>
    [grpc::BindServiceMethod(typeof(CircleProtoService), "BindService")]
    public abstract partial class CircleProtoServiceBase
    {
      /// <summary>
      /// Circle management
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.Circle> CreateCircle(global::Blipper.Proto.CircleService.CreateCircleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.Circle> GetCircle(global::Blipper.Proto.CircleService.GetCircleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.CircleService.ListCirclesResponse> ListCircles(global::Blipper.Proto.CircleService.ListCirclesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.Circle> UpdateCircle(global::Blipper.Proto.CircleService.UpdateCircleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCircle(global::Blipper.Proto.CircleService.DeleteCircleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Membership management
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.MembershipInfo> JoinCircle(global::Blipper.Proto.CircleService.JoinCircleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> LeaveCircle(global::Blipper.Proto.CircleService.LeaveCircleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.CircleService.GetUserCirclesResponse> GetUserCircles(global::Blipper.Proto.CircleService.GetUserCirclesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.CircleService.GetCircleMembersResponse> GetCircleMembers(global::Blipper.Proto.CircleService.GetCircleMembersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.MembershipInfo> UpdateMemberRole(global::Blipper.Proto.CircleService.UpdateMemberRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.MembershipInfo> GetMembership(global::Blipper.Proto.CircleService.GetMembershipRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Join requests
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.CircleService.ListJoinRequestsResponse> ListJoinRequests(global::Blipper.Proto.CircleService.ListJoinRequestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Blipper.Proto.Shared.MembershipInfo> ApproveJoinRequest(global::Blipper.Proto.CircleService.ApproveJoinRequestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> RejectJoinRequest(global::Blipper.Proto.CircleService.RejectJoinRequestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CircleProtoService</summary>
    public partial class CircleProtoServiceClient : grpc::ClientBase<CircleProtoServiceClient>
    {
      /// <summary>Creates a new client for CircleProtoService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CircleProtoServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CircleProtoService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CircleProtoServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CircleProtoServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CircleProtoServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Circle management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.Circle CreateCircle(global::Blipper.Proto.CircleService.CreateCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCircle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Circle management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.Circle CreateCircle(global::Blipper.Proto.CircleService.CreateCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCircle, null, options, request);
      }
      /// <summary>
      /// Circle management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.Circle> CreateCircleAsync(global::Blipper.Proto.CircleService.CreateCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCircleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Circle management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.Circle> CreateCircleAsync(global::Blipper.Proto.CircleService.CreateCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.Circle GetCircle(global::Blipper.Proto.CircleService.GetCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCircle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.Circle GetCircle(global::Blipper.Proto.CircleService.GetCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.Circle> GetCircleAsync(global::Blipper.Proto.CircleService.GetCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCircleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.Circle> GetCircleAsync(global::Blipper.Proto.CircleService.GetCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.ListCirclesResponse ListCircles(global::Blipper.Proto.CircleService.ListCirclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCircles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.ListCirclesResponse ListCircles(global::Blipper.Proto.CircleService.ListCirclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCircles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.ListCirclesResponse> ListCirclesAsync(global::Blipper.Proto.CircleService.ListCirclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCirclesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.ListCirclesResponse> ListCirclesAsync(global::Blipper.Proto.CircleService.ListCirclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCircles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.Circle UpdateCircle(global::Blipper.Proto.CircleService.UpdateCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCircle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.Circle UpdateCircle(global::Blipper.Proto.CircleService.UpdateCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.Circle> UpdateCircleAsync(global::Blipper.Proto.CircleService.UpdateCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCircleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.Circle> UpdateCircleAsync(global::Blipper.Proto.CircleService.UpdateCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCircle(global::Blipper.Proto.CircleService.DeleteCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCircle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCircle(global::Blipper.Proto.CircleService.DeleteCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCircleAsync(global::Blipper.Proto.CircleService.DeleteCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCircleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCircleAsync(global::Blipper.Proto.CircleService.DeleteCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCircle, null, options, request);
      }
      /// <summary>
      /// Membership management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo JoinCircle(global::Blipper.Proto.CircleService.JoinCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinCircle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Membership management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo JoinCircle(global::Blipper.Proto.CircleService.JoinCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_JoinCircle, null, options, request);
      }
      /// <summary>
      /// Membership management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> JoinCircleAsync(global::Blipper.Proto.CircleService.JoinCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinCircleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Membership management
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> JoinCircleAsync(global::Blipper.Proto.CircleService.JoinCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_JoinCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty LeaveCircle(global::Blipper.Proto.CircleService.LeaveCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveCircle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty LeaveCircle(global::Blipper.Proto.CircleService.LeaveCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LeaveCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> LeaveCircleAsync(global::Blipper.Proto.CircleService.LeaveCircleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveCircleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> LeaveCircleAsync(global::Blipper.Proto.CircleService.LeaveCircleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LeaveCircle, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.GetUserCirclesResponse GetUserCircles(global::Blipper.Proto.CircleService.GetUserCirclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserCircles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.GetUserCirclesResponse GetUserCircles(global::Blipper.Proto.CircleService.GetUserCirclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserCircles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.GetUserCirclesResponse> GetUserCirclesAsync(global::Blipper.Proto.CircleService.GetUserCirclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserCirclesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.GetUserCirclesResponse> GetUserCirclesAsync(global::Blipper.Proto.CircleService.GetUserCirclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserCircles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.GetCircleMembersResponse GetCircleMembers(global::Blipper.Proto.CircleService.GetCircleMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCircleMembers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.GetCircleMembersResponse GetCircleMembers(global::Blipper.Proto.CircleService.GetCircleMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCircleMembers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.GetCircleMembersResponse> GetCircleMembersAsync(global::Blipper.Proto.CircleService.GetCircleMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCircleMembersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.GetCircleMembersResponse> GetCircleMembersAsync(global::Blipper.Proto.CircleService.GetCircleMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCircleMembers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo UpdateMemberRole(global::Blipper.Proto.CircleService.UpdateMemberRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMemberRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo UpdateMemberRole(global::Blipper.Proto.CircleService.UpdateMemberRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMemberRole, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> UpdateMemberRoleAsync(global::Blipper.Proto.CircleService.UpdateMemberRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMemberRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> UpdateMemberRoleAsync(global::Blipper.Proto.CircleService.UpdateMemberRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMemberRole, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo GetMembership(global::Blipper.Proto.CircleService.GetMembershipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMembership(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo GetMembership(global::Blipper.Proto.CircleService.GetMembershipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMembership, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> GetMembershipAsync(global::Blipper.Proto.CircleService.GetMembershipRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMembershipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> GetMembershipAsync(global::Blipper.Proto.CircleService.GetMembershipRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMembership, null, options, request);
      }
      /// <summary>
      /// Join requests
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.ListJoinRequestsResponse ListJoinRequests(global::Blipper.Proto.CircleService.ListJoinRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListJoinRequests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Join requests
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.CircleService.ListJoinRequestsResponse ListJoinRequests(global::Blipper.Proto.CircleService.ListJoinRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListJoinRequests, null, options, request);
      }
      /// <summary>
      /// Join requests
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.ListJoinRequestsResponse> ListJoinRequestsAsync(global::Blipper.Proto.CircleService.ListJoinRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListJoinRequestsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Join requests
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.CircleService.ListJoinRequestsResponse> ListJoinRequestsAsync(global::Blipper.Proto.CircleService.ListJoinRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListJoinRequests, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo ApproveJoinRequest(global::Blipper.Proto.CircleService.ApproveJoinRequestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveJoinRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Blipper.Proto.Shared.MembershipInfo ApproveJoinRequest(global::Blipper.Proto.CircleService.ApproveJoinRequestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ApproveJoinRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> ApproveJoinRequestAsync(global::Blipper.Proto.CircleService.ApproveJoinRequestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveJoinRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Blipper.Proto.Shared.MembershipInfo> ApproveJoinRequestAsync(global::Blipper.Proto.CircleService.ApproveJoinRequestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ApproveJoinRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RejectJoinRequest(global::Blipper.Proto.CircleService.RejectJoinRequestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJoinRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RejectJoinRequest(global::Blipper.Proto.CircleService.RejectJoinRequestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RejectJoinRequest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RejectJoinRequestAsync(global::Blipper.Proto.CircleService.RejectJoinRequestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RejectJoinRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RejectJoinRequestAsync(global::Blipper.Proto.CircleService.RejectJoinRequestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RejectJoinRequest, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CircleProtoServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CircleProtoServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CircleProtoServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCircle, serviceImpl.CreateCircle)
          .AddMethod(__Method_GetCircle, serviceImpl.GetCircle)
          .AddMethod(__Method_ListCircles, serviceImpl.ListCircles)
          .AddMethod(__Method_UpdateCircle, serviceImpl.UpdateCircle)
          .AddMethod(__Method_DeleteCircle, serviceImpl.DeleteCircle)
          .AddMethod(__Method_JoinCircle, serviceImpl.JoinCircle)
          .AddMethod(__Method_LeaveCircle, serviceImpl.LeaveCircle)
          .AddMethod(__Method_GetUserCircles, serviceImpl.GetUserCircles)
          .AddMethod(__Method_GetCircleMembers, serviceImpl.GetCircleMembers)
          .AddMethod(__Method_UpdateMemberRole, serviceImpl.UpdateMemberRole)
          .AddMethod(__Method_GetMembership, serviceImpl.GetMembership)
          .AddMethod(__Method_ListJoinRequests, serviceImpl.ListJoinRequests)
          .AddMethod(__Method_ApproveJoinRequest, serviceImpl.ApproveJoinRequest)
          .AddMethod(__Method_RejectJoinRequest, serviceImpl.RejectJoinRequest).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CircleProtoServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCircle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.CreateCircleRequest, global::Blipper.Proto.Shared.Circle>(serviceImpl.CreateCircle));
      serviceBinder.AddMethod(__Method_GetCircle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.GetCircleRequest, global::Blipper.Proto.Shared.Circle>(serviceImpl.GetCircle));
      serviceBinder.AddMethod(__Method_ListCircles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.ListCirclesRequest, global::Blipper.Proto.CircleService.ListCirclesResponse>(serviceImpl.ListCircles));
      serviceBinder.AddMethod(__Method_UpdateCircle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.UpdateCircleRequest, global::Blipper.Proto.Shared.Circle>(serviceImpl.UpdateCircle));
      serviceBinder.AddMethod(__Method_DeleteCircle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.DeleteCircleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCircle));
      serviceBinder.AddMethod(__Method_JoinCircle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.JoinCircleRequest, global::Blipper.Proto.Shared.MembershipInfo>(serviceImpl.JoinCircle));
      serviceBinder.AddMethod(__Method_LeaveCircle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.LeaveCircleRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.LeaveCircle));
      serviceBinder.AddMethod(__Method_GetUserCircles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.GetUserCirclesRequest, global::Blipper.Proto.CircleService.GetUserCirclesResponse>(serviceImpl.GetUserCircles));
      serviceBinder.AddMethod(__Method_GetCircleMembers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.GetCircleMembersRequest, global::Blipper.Proto.CircleService.GetCircleMembersResponse>(serviceImpl.GetCircleMembers));
      serviceBinder.AddMethod(__Method_UpdateMemberRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.UpdateMemberRoleRequest, global::Blipper.Proto.Shared.MembershipInfo>(serviceImpl.UpdateMemberRole));
      serviceBinder.AddMethod(__Method_GetMembership, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.GetMembershipRequest, global::Blipper.Proto.Shared.MembershipInfo>(serviceImpl.GetMembership));
      serviceBinder.AddMethod(__Method_ListJoinRequests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.ListJoinRequestsRequest, global::Blipper.Proto.CircleService.ListJoinRequestsResponse>(serviceImpl.ListJoinRequests));
      serviceBinder.AddMethod(__Method_ApproveJoinRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.ApproveJoinRequestRequest, global::Blipper.Proto.Shared.MembershipInfo>(serviceImpl.ApproveJoinRequest));
      serviceBinder.AddMethod(__Method_RejectJoinRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Blipper.Proto.CircleService.RejectJoinRequestRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.RejectJoinRequest));
    }

  }
}
#endregion
