syntax = "proto3";

package blipper.blip.v1;
option go_package = "/blip";
option csharp_namespace = "Blipper.Proto.BlipService";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service BlipService {
  rpc CreateBlip(CreateBlipRequest) returns (CreateBlipResponse);
  rpc GetBlip(GetBlipRequest) returns (GetBlipResponse);
  rpc ListBlips(ListBlipsRequest) returns (ListBlipsResponse);
  rpc DeleteBlip(DeleteBlipRequest) returns (DeleteBlipResponse);
  rpc UpdateBlip(UpdateBlipRequest) returns (UpdateBlipResponse);

  // Comment operations
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse);
  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (google.protobuf.Empty);

  // Vote operations
  rpc Vote(VoteRequest) returns (VoteResponse);
  rpc GetVoteStatus(GetVoteStatusRequest) returns (GetVoteStatusResponse);

  // Timeline operations
  rpc GetCircleTimeline(GetCircleTimelineRequest) returns (GetCircleTimelineResponse);
  rpc GetUserTimeline(GetUserTimelineRequest) returns (GetUserTimelineResponse);

  // Feed operations
  rpc GetTrendingFeed(GetTrendingFeedRequest) returns (GetTrendingFeedResponse);
  rpc GetPopularFeed(GetPopularFeedRequest) returns (GetPopularFeedResponse);
}

message CreateBlipRequest {
  string content = 1;
  string author_id = 2;
  string circle_id = 3;
  repeated string media_urls = 4;
  optional string reblip_of = 5;
}

message CreateBlipResponse {
  Blip blip = 1;
}

message GetBlipRequest {
  string id = 1;  // LUID
}

message GetBlipResponse {
  Blip blip = 1;
}

message ListBlipsRequest {
  string circle_id = 1;
  optional string author_id = 2;
  optional int32 page_size = 3;
  optional string page_token = 4;
}

message ListBlipsResponse {
  repeated Blip blips = 1;
  string next_page_token = 2;
}

message DeleteBlipRequest {
  string id = 1;  // LUID
  string author_id = 2;  // For authorization
}

message DeleteBlipResponse {}

message UpdateBlipRequest {
  string id = 1;  // LUID
  string author_id = 2;  // For authorization
  string content = 3;
  repeated string media_urls = 4;
}

message UpdateBlipResponse {
  Blip blip = 1;
}

message BlipMetadata {
  int64 upvotes = 1;
  int64 downvotes = 2;
  int64 comments_count = 3;
  int64 reblip_count = 4;
  google.protobuf.Timestamp last_activity = 5;
  double trending_score = 6;
}

message Blip {
  string id = 1;                                // LUID
  string content = 2;
  string author_id = 3;
  string circle_id = 4;
  repeated string media_urls = 5;
  optional string reblip_of = 6;                // If this is a reblip
  optional string parent_blip_id = 7;           // If this is a comment
  google.protobuf.Timestamp created_at = 8;
  BlipMetadata metadata = 10;
  optional UserVoteStatus user_vote = 11;      // Present if user is authenticated
}

message Comment {
  string id = 1;                                // LUID
  string parent_blip_id = 2;
  string content = 3;
  string author_id = 4;
  repeated string media_urls = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  BlipMetadata metadata = 8;
  optional UserVoteStatus user_vote = 9;       // Present if user is authenticated
}

message CreateCommentRequest {
  string parent_blip_id = 1;
  string content = 2;
  string author_id = 3;
  repeated string media_urls = 4;
}

message CreateCommentResponse {
  Comment comment = 1;
}

message DeleteCommentRequest {
  string id = 1;  // LUID
  string author_id = 2;  // For authorization
}

message UpdateCommentRequest {
  string id = 1;  // LUID
  string author_id = 2;  // For authorization
  string content = 3;
  repeated string media_urls = 4;
}

message UpdateCommentResponse {
  Comment comment = 1;
}

message GetCommentsRequest {
  string parent_blip_id = 1;
  int32 page_size = 2;
  optional string page_token = 3;
}

message GetCommentsResponse {
  repeated Comment comments = 1;
  string next_page_token = 2;
  int64 total_comments = 3;
}

message VoteRequest {
  string target_id = 1;
  TargetType target_type = 2;
  VoteType vote_type = 3;
  string user_id = 4;
}

message VoteResponse {
  BlipMetadata updated_metadata = 1;
  UserVoteStatus user_vote = 2;
}

message GetVoteStatusRequest {
  string target_id = 1;
  TargetType target_type = 2;
  string user_id = 3;
}

message GetVoteStatusResponse {
  UserVoteStatus user_vote = 1;
}

message GetCircleTimelineRequest {
  string circle_id = 1;
  optional int32 page_size = 2;
  optional string page_token = 3;
}

message GetCircleTimelineResponse {
  repeated Blip blips = 1;
  string next_page_token = 2;
}

message GetUserTimelineRequest {
  string user_id = 1;
  optional int32 page_size = 2;
  optional string page_token = 3;
}

message GetUserTimelineResponse {
  repeated Blip blips = 1;
  string next_page_token = 2;
}

message GetTrendingFeedRequest {
  optional int32 page_size = 1;
  optional string page_token = 2;
}

message GetTrendingFeedResponse {
  repeated Blip blips = 1;
  string next_page_token = 2;
}

message GetPopularFeedRequest {
  string circle_id = 1;
  optional int32 page_size = 2;
  optional string page_token = 3;
}

message GetPopularFeedResponse {
  repeated Blip blips = 1;
  string next_page_token = 2;
}

enum VoteType {
  VOTE_TYPE_UNSPECIFIED = 0;
  VOTE_TYPE_UPVOTE = 1;
  VOTE_TYPE_DOWNVOTE = 2;
}

enum TargetType {
  TARGET_TYPE_UNSPECIFIED = 0;
  TARGET_TYPE_BLIP = 1;
  TARGET_TYPE_COMMENT = 2;
}

message UserVoteStatus {
  VoteType vote_type = 1;
  google.protobuf.Timestamp voted_at = 2;
}
