syntax = "proto3";

package blipper.circle.v1;

option csharp_namespace = "Blipper.Proto.CircleService";
option go_package = "/circle";


import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "shared/shared.proto";

service CircleProtoService {
 // Circle management
 rpc CreateCircle(CreateCircleRequest) returns (blipper.shared.v1.Circle);
 rpc GetCircle(GetCircleRequest) returns (blipper.shared.v1.Circle);
 rpc ListCircles(ListCirclesRequest) returns (ListCirclesResponse);
 rpc UpdateCircle(UpdateCircleRequest) returns (blipper.shared.v1.Circle);
 rpc DeleteCircle(DeleteCircleRequest) returns (google.protobuf.Empty);

 // Membership management
 rpc JoinCircle(JoinCircleRequest) returns (blipper.shared.v1.MembershipInfo);
 rpc LeaveCircle(LeaveCircleRequest) returns (google.protobuf.Empty);
 rpc GetUserCircles(GetUserCirclesRequest) returns (GetUserCirclesResponse);
 rpc GetCircleMembers(GetCircleMembersRequest) returns (GetCircleMembersResponse);
 rpc UpdateMemberRole(UpdateMemberRoleRequest) returns (blipper.shared.v1.MembershipInfo);
 rpc GetMembership(GetMembershipRequest) returns (blipper.shared.v1.MembershipInfo);

 // Join requests
 rpc ListJoinRequests(ListJoinRequestsRequest) returns (ListJoinRequestsResponse);
 rpc ApproveJoinRequest(ApproveJoinRequestRequest) returns (blipper.shared.v1.MembershipInfo);
 rpc RejectJoinRequest(RejectJoinRequestRequest) returns (google.protobuf.Empty);
}

message CreateCircleRequest {
 string name = 1;
 string description = 2;
 bool is_private = 3;
 string creator_id = 4;
}

message GetCircleRequest {
 string circle_id = 1;
}

message ListCirclesRequest {
 int32 page = 1;
 int32 page_size = 2;
}

message ListCirclesResponse {
 repeated blipper.shared.v1.Circle circles = 1;
 int32 total_count = 2;
}

message UpdateCircleRequest {
 string circle_id = 1;
 optional string name = 2;
 optional string description = 3;
 optional bool is_private = 4;
}

message DeleteCircleRequest {
 string circle_id = 1;
}

message JoinCircleRequest {
 string user_id = 1;
 string circle_id = 2;
}

message LeaveCircleRequest {
 string user_id = 1;
 string circle_id = 2;
}

message GetUserCirclesRequest {
 string user_id = 1;
 int32 page = 2;
 int32 page_size = 3;
}

message GetUserCirclesResponse {
 repeated blipper.shared.v1.Circle circles = 1;
 repeated blipper.shared.v1.MembershipInfo memberships = 2;
 int32 total_count = 3;
}

message GetCircleMembersRequest {
 string circle_id = 1;
 int32 page = 2;
 int32 page_size = 3;
}

message GetCircleMembersResponse {
 repeated blipper.shared.v1.User users = 1;
 repeated blipper.shared.v1.MembershipInfo memberships = 2;
 int32 total_count = 3;
}

message UpdateMemberRoleRequest {
 string user_id = 1;
 string circle_id = 2;
 blipper.shared.v1.Role new_role = 3;
}

message GetMembershipRequest {
 string user_id = 1;
 string circle_id = 2;
}

message ListJoinRequestsRequest {
 string circle_id = 1;
 int32 page = 2;
 int32 page_size = 3;
}

message ListJoinRequestsResponse {
 message JoinRequest {
   string user_id = 1;
   string circle_id = 2;
   google.protobuf.Timestamp requested_at = 3;
   blipper.shared.v1.User user = 4;
 }
 repeated JoinRequest requests = 1;
 int32 total_count = 2;
}

message ApproveJoinRequestRequest {
 string user_id = 1;
 string circle_id = 2;
}

message RejectJoinRequestRequest {
 string user_id = 1;
 string circle_id = 2;
}