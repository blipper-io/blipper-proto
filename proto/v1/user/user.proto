// proto/v1/user/user.proto
syntax = "proto3";

package blipper.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "/user";

option csharp_namespace = "Blipper.Proto.UserService";


// User management service
service UserProtoService {
  // Authentication
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc Logout (LogoutRequest) returns (google.protobuf.Empty);
  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);

  // Profile management
  rpc GetUser (GetUserRequest) returns (UserResponse);
  rpc UpdateProfile (UpdateProfileRequest) returns (UserResponse);
  rpc UpdatePassword (UpdatePasswordRequest) returns (google.protobuf.Empty);
  rpc DeleteAccount (DeleteAccountRequest) returns (google.protobuf.Empty);
  
  // Search and discovery
  rpc SearchUsers (SearchUsersRequest) returns (SearchUsersResponse);
}

// User profile data
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string display_name = 4;
  string bio = 5;
  string avatar_url = 6;
  UserRole role = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  UserStatus status = 10;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_SUSPENDED = 2;
  USER_STATUS_DELETED = 3;
}

message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool is_valid = 1;
  optional string user_id = 2;
}

// Authentication messages
message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterResponse {
  string id = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message LoginRequest {
  string username_or_email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

message LogoutRequest {
  string refresh_token = 1;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

// Profile management messages
message GetUserRequest {
  string user_id = 1;
}

message UserResponse {
  User user = 1;
}

message UpdateProfileRequest {
  string display_name = 1;
  string bio = 2;
  string avatar_url = 3;
}

message UpdatePasswordRequest {
  string current_password = 1;
  string new_password = 2;
}

message DeleteAccountRequest {
  string password = 1;
}

// Search messages
message SearchUsersRequest {
  string query = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message SearchUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
}

// Enums
enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_USER = 1;
  USER_ROLE_MODERATOR = 2;
  USER_ROLE_ADMIN = 3;
}