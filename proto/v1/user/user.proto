// proto/v1/user/user.proto
syntax = "proto3";

package blipper.v1;

import "google/protobuf/empty.proto";
import "shared/shared.proto";

option go_package = "/user";
option csharp_namespace = "Blipper.Proto.UserService";


// User management service
service UserProtoService {
 // User management
 rpc CreateUser(CreateUserRequest) returns (blipper.shared.v1.User);
 rpc GetUser(GetUserRequest) returns (blipper.shared.v1.User);
 rpc UpdateUser(UpdateUserRequest) returns (blipper.shared.v1.User);
 rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);

 rpc CheckUsernameAvailability(CheckUsernameAvailabilityRequest) returns (CheckUsernameAvailabilityResponse);
 
 // Profile management
 rpc UpdateProfile(UpdateProfileRequest) returns (blipper.shared.v1.User);
 
 // Search and discovery
 rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
}

message CheckUsernameAvailabilityRequest {
 string username = 1;
}

message CheckUsernameAvailabilityResponse {
 bool is_available = 1;
}

message CreateUserRequest {
 string username = 1;
 string email = 2;
 string display_name = 4;
}

message GetUserRequest {
 string user_id = 1;
}

message UpdateUserRequest {
 string user_id = 1;
 optional string username = 2;
 optional string email = 3;
 optional string display_name = 4;
 optional string bio = 5;
 optional string avatar_url = 6;
}

message DeleteUserRequest {
 string user_id = 1;
}

message UpdateProfileRequest {
 string user_id = 1;
 optional string display_name = 2;
 optional string bio = 3;
 optional string avatar_url = 4;
}

message SearchUsersRequest {
 string query = 1;
 int32 page = 2;
 int32 page_size = 3;
}

message SearchUsersResponse {
 repeated blipper.shared.v1.User users = 1;
 int32 total_count = 2;
}